#!/usr/bin/env ruby

require 'digest'
require 'set'

require_relative "../lib/store.rb"

PROGRESSBAR_SETTINGS = {format: '%t |%E | %B | %a', output: $stderr}

if not ARGV.count > 1
  $stderr.puts "dot root path..."
  exit 1
end

root_id = ARGV[0]
paths = ARGV[1..-1]

directories = []
files = []

paths.each { |path|
  if File.directory?(path)
    directories << path
  elsif File.file?(path)
    files << path
  else
    $stderr.puts "Unknown path type: #{path}"
  end
}

store = Store.from_directories(directories, progress: PROGRESSBAR_SETTINGS)

files.each { |file|
  File.readlines(file).each { |thing|
    store.add!(JSON.parse(thing, symbolize_names: true))
  }
}

def node_id(entity)
  "a#{Digest::SHA1.hexdigest(entity.id)}"
end

def dot(store, id)
  all_relations = store.all_relations_for(id)
  all_pairs = all_relations.map { |rel| store.resolve(rel) }
  all_entities = all_pairs.flatten.to_set

  out = []

  out << "digraph ontology {"

  all_entities.each { |entity|
    id = entity.id
    hash = node_id(entity)
    out << "  #{hash} [label=\"#{id}\"];"
  }

  all_pairs.each { |a, b|
    if a and b
      a_hash = node_id(a)
      b_hash = node_id(b)
      out << "  #{a_hash} -> #{b_hash}"
    end
  }

  out << "}"

  out.join("\n")
end

puts dot(store, root_id)
