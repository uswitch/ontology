#!/usr/bin/env ruby

require 'digest'
require 'set'

require_relative "../lib/store.rb"

if not ARGV.count > 1
  $stderr.puts "dot path... root"
end

root_id = ARGV[-1]
directories = ARGV[0..-2]

store = Store.from_directories(directories, progress: {title: "Loading files", output: $stderr})

def node_id(entity)
  "a#{Digest::SHA1.hexdigest(entity["metadata"]["id"])}"
end

def dot(store, id)
  all_relations = store.all_relations_for(id)
  all_pairs = all_relations.map { |rel|
    [ store.resolve(rel["properties"]["a"]), store.resolve(rel["properties"]["b"]) ]
  }
  all_entities = all_pairs.flatten.to_set

  out = []

  out << "digraph ontology {"

  all_entities.each { |entity|
    id = entity["metadata"]["id"]
    hash = node_id(entity)
    out << "  #{hash} [label=\"#{id}\"];"
  }

  all_pairs.each { |a, b|
    if a and b
      a_hash = node_id(a)
      b_hash = node_id(b)
      out << "  #{a_hash} -> #{b_hash}"
    end
  }

  out << "}"

  out.join("\n")
end

puts dot(store, root_id)
