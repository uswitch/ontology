#!/usr/bin/env ruby

require "digest"
require "parallel"
require "ruby-progressbar"

require_relative "../lib/store.rb"

require_relative "../lib/external/ad.rb"
require_relative "../lib/external/aws.rb"
require_relative "../lib/external/docker.rb"
require_relative "../lib/external/gcp.rb"
require_relative "../lib/external/github.rb"
require_relative "../lib/external/kubernetes.rb"

providers = {
  "ad" =>  AD.new,
  "aws" => AWS.new,
  "docker" => DockerRegistry.new,
#  GCP.new,
  "github" => GitHub.new,
  "kubernetes" => Kubernetes.new,
}

if not ARGV.count > 0
  $stderr.puts "sync provider..."
  $stderr.puts "providers: #{providers.keys}"
  exit 1
end

to_sync = ARGV.map { |name|
  if not providers.has_key?(name)
    $stderr.puts "invalid provider '#{name}'"
    $stderr.puts "providers: #{providers.keys}"
    exit 1
  end

  providers[name]
}

Parallel.each(to_sync) { |source|
  source.sync.each { |thing|
    puts JSON.dump(thing)
  }
}
